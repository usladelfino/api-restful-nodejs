name: Docker CD

on:
  push:
    tags:
      - 'v*'
      
jobs:
  deploy:
    runs-on: ubuntu-latest # ou outra versÃ£o de SO suportada pelo Webdock
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
       
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}  
          
      - name: Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: usladelfino/api-restful-nodejs:latest    
      
      - name: Deploy to Webdock
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.WEBDOCK_HOST }}
          username: ${{ secrets.WEBDOCK_USER }}
          key: ${{ secrets.WEBDOCK_SSH_KEY }}
          script: |
            docker pull usladelfino/api-restful-nodejs:latest
            if docker inspect api-restful-nodejs &> /dev/null; then
              docker stop api-restful-nodejs || true
              docker rm api-restful-nodejs || true
            fi
            docker run --env DB_HOST=${{ secrets.DB_HOST }} --env DB_USER=${{ secrets.DB_USER }} --env DB_PASSWORD=${{ secrets.DB_PASSWORD }} --env DB_DATABASE=${{ secrets.DB_DATABASE }}  -d --restart always --name api-restful-nodejs -p 3000:3000 usladelfino/api-restful-nodejs:latest
            docker system prune -f
                
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release ${{ github.ref }}
          draft: false
          prerelease: false


            
